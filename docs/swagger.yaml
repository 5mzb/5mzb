openapi: 3.0.0
info:
  description: 五毛账本
  version: 1.0.0
  title: 5MZB
  termsOfService: 'http://5mzb.com/terms/'
  contact:
    email: admin@5mzb.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
servers:
  - url: 'https://api.5mzb.com/v1/'
tags:
  - name: 认证与授权
  - name: 用户
  - name: 账本
  - name: 资产
  - name: 流水
paths:
  /login:
    post:
      tags:
        - 认证与授权
      summary: 登录
      description: ''
      operationId: login
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
  /logout:
    get:
      tags:
        - 认证与授权
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      responses:
        default:
          description: successful operation
  '/u/{username}':
    get:
      tags:
        - 用户
      summary: 获取用户信息
      description: ''
      operationId: getUserByName
      parameters:
        - name: username
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    put:
      tags:
        - 用户
      summary: 用户资料更新
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
        - name: username
          in: path
          description: name that need to be updated
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Updated user object
        required: true
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
    delete:
      tags:
        - 用户
      summary: 用户注销
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
  '/b/{bookId}':
    get:
      tags:
        - 账本
      summary: 获取账本信息
      description: ''
      operationId: getBookByID
      parameters:
        - name: bookId
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountingBook'
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingBook'
  '/a/{assertId}':
    get:
      tags:
        - 资产
      summary: 获取账本信息
      description: ''
      operationId: getAssertByID
      parameters:
        - name: assertId
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountingAssert'
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingAssert'
  '/r/{recordId}':
    get:
      tags:
        - 流水
      summary: 获取流水信息
      description: ''
      operationId: getRecordByID
      parameters:
        - name: recordId
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountingRecord'
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingRecord'
components:
  requestBodies:
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      description: List of user object
      required: true
  securitySchemes:
    api_key:
      type: apiKey
      name: X-TOKEN
      in: header
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        realname:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        status:
          type: integer
          format: int32
          description: User Status
      xml:
        name: User
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    AccountingBook:
      type: object
      properties:
        id:
          type: integer
        user:
          type: integer
        name:
          type: string
        created_by:
          type: integer
    AccountingCategory:
      description: 收支类别
      type: object
      properties:
        id:
          type: integer
        type:
          type: integer
          description: 收，支
        name:
          type: string
    AccountingAssert:
      description: 资产
      type: object
      properties:
        id:
          type: integer
        user:
          type: integer
        name:
          type: string
        amount:
          type: number
          format: double
        type:
          type: string
          enum:
            - cash
            - deposit
            - credit
            - banking
        remark:
          type: string
    AccountingAssertDepositCard:
      description: 资产：储蓄卡
      allOf:
        - $ref: '#/components/schemas/AccountingAssert'
        - type: object
          properties:
            bank:
              type: string
              example: boc
            card_number:
              type: integer
    AccountingAssertCredit:
      description: 资产：信用卡
      allOf:
        - $ref: '#/components/schemas/AccountingAssertDepositCard'
        - type: object
          properties:
            credit:
              type: number
              format: double
            credit_available:
              type: number
              format: double
              description: 可通过 credit 和 amount 计算
            credit_left:
              type: number
              format: double
              description: 可通过 credit 和 amount 计算
    AccountingRecord:
      type: object
      description: 帐目
      properties:
        id:
          type: integer
        user:
          type: integer
        time:
          type: integer
        amount:
          type: number
        from_assert:
          type: integer
        to_assert:
          type: integer
          nullable: true
        remark:
          type: string
          nullable: true
    AccountingLoan:
      type: object
      description: 借款/还款
      properties:
        id:
          type: integer
        user:
          type: integer
        peer:
          type: string
        assert:
          type: integer
        amount:
          type: number
          format: double
        time_start:
          type: string
          format: date-time
        time_end:
          type: string
          format: date-time
